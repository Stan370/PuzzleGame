const u={en:{title:"Huarong Klotski",level:"Level",reset:"Reset Game",undo:"Undo Move",moves:"Moves",best:"Best",leaderboard:"Leaderboard",noScores:"No scores recorded yet!",viewFullLeaderboard:"View Full Leaderboard",gameIntro:"Huarong Dao(Aka. Klotski) is an ancient Chinese puzzle game based on the historical story of Cao Cao being surrounded at Huarong Path. The goal is to help Cao Cao (2x2 block) escape through the exit. Common goals are to solve the puzzle with a minimum number of moves or in a minimum amount of time.",levels:[{id:"横刀立马",name:"Horizontal Blade",description:"Difficulty:★★★★ Based on the historical moment when Cao Cao was trapped at Huarong Path and Guan Yu let him escape. Best solution: 81 moves."},{id:"指挥若定",name:"Commanding Position",description:"Difficulty: ★★★ Carefully analyze the movement paths of each general. Best solution: 70 moves."},{id:"水泄不通",name:"No Way Out",description:"Difficulty: ★★★★ Surrounded on all sides, requires clever maneuvering. Best solution: 79 moves."},{id:"四面楚歌",name:"Enemies All Around",description:"Difficulty: ★★★ Challenging layout, Surrounded by enemies, find the breakthrough point. Best solution: 56 moves."},{id:"兵分三路",name:"Three-Way Split",description:"Difficulty: ★★★★ Enemy forces are scattered, find the right moment to break through, its a tactical challenge. Best solution: 72 moves."}]},zh:{title:"华容道",level:"关卡",reset:"重新开始",undo:"撤销",moves:"步数",best:"最佳成绩",leaderboard:"排行榜",noScores:"暂无记录！",viewFullLeaderboard:"查看完整排行榜",gameIntro:"华容道是一种古老的中国益智游戏，以三国时期曹操被围困华容道的历史故事为背景。游戏目标是通过移动棋子，帮助曹操（2x2红色方块）逃出华容道。",levels:[{id:"横刀立马",name:"横刀立马",description:"难度：★★★★ 经典布局。最优解：81步。"},{id:"指挥若定",name:"指挥若定",description:"难度：★★★ 战略布局。最优解：70步。"},{id:"水泄不通",name:"水泄不通",description:"难度：★★★★ 复杂布局。最优解：79步。"},{id:"四面楚歌",name:"四面楚歌",description:"难度：★★★ 挑战布局。最优解：56步。"},{id:"兵分三路",name:"兵分三路",description:"难度：★★★★ 战术布局。最优解：72步。"}]}},C=[{name:"横刀立马",description:"相传曹操在赤壁之战后被围困于华容道，关羽放他离去。此局难度：★★★",layout:[{type:"CAO_CAO",x:1,y:0},{type:"VERTICAL",x:0,y:0},{type:"VERTICAL",x:3,y:0},{type:"VERTICAL",x:0,y:2},{type:"VERTICAL",x:3,y:2},{type:"HORIZONTAL",x:1,y:2},{type:"SINGLE",x:1,y:3},{type:"SINGLE",x:2,y:3},{type:"SINGLE",x:0,y:4},{type:"SINGLE",x:3,y:4}]},{name:"指挥若定",description:"需要仔细分析每个将领的移动路线。此局难度：★★",layout:[{type:"VERTICAL",x:0,y:0},{type:"CAO_CAO",x:1,y:0},{type:"VERTICAL",x:3,y:0},{type:"VERTICAL",x:3,y:3},{type:"VERTICAL",x:0,y:3},{type:"HORIZONTAL",x:1,y:2},{type:"SINGLE",x:0,y:2},{type:"SINGLE",x:1,y:3},{type:"SINGLE",x:2,y:3},{type:"SINGLE",x:3,y:2}]},{name:"水泄不通",description:"四周被重重包围，需要巧妙调度。此局难度：★★★★",layout:[{type:"VERTICAL",x:0,y:0},{type:"CAO_CAO",x:1,y:0},{type:"SINGLE",x:3,y:0},{type:"SINGLE",x:3,y:1},{type:"HORIZONTAL",x:0,y:2},{type:"HORIZONTAL",x:0,y:3},{type:"HORIZONTAL",x:2,y:3},{type:"HORIZONTAL",x:2,y:2},{type:"SINGLE",x:0,y:4},{type:"SINGLE",x:3,y:4}]},{name:"四面楚歌",description:"四面受敌，需要找到突破口。此局难度：★★★★★",layout:[{type:"VERTICAL",x:0,y:0},{type:"CAO_CAO",x:1,y:1},{type:"VERTICAL",x:3,y:0},{type:"VERTICAL",x:0,y:3},{type:"VERTICAL",x:3,y:2},{type:"HORIZONTAL",x:1,y:3},{type:"SINGLE",x:0,y:2},{type:"SINGLE",x:3,y:4},{type:"SINGLE",x:1,y:0},{type:"SINGLE",x:2,y:0}]},{name:"兵分三路",description:"敌军分散，寻找突破时机。此局难度：★★★",layout:[{type:"VERTICAL",x:0,y:1},{type:"CAO_CAO",x:1,y:0},{type:"VERTICAL",x:3,y:1},{type:"VERTICAL",x:0,y:3},{type:"VERTICAL",x:3,y:3},{type:"HORIZONTAL",x:1,y:2},{type:"SINGLE",x:0,y:0},{type:"SINGLE",x:1,y:3},{type:"SINGLE",x:2,y:3},{type:"SINGLE",x:3,y:0}]},,{name:"1",description:"1此局难度：★★★",layout:[{type:"VERTICAL",x:0,y:1},{type:"CAO_CAO",x:1,y:0}]}];function L(){const h=localStorage.getItem("userLevels");return h?JSON.parse(h):[]}function x(h){const e=L();e.push({...h,isUserCreated:!0,dateCreated:new Date().toISOString()}),localStorage.setItem("userLevels",JSON.stringify(e))}function I(h){const t=L().filter(s=>s.name!==h);localStorage.setItem("userLevels",JSON.stringify(t))}function v(){return[...C,...L()]}class S{constructor(e=0){this.BOARD_WIDTH=4,this.BOARD_HEIGHT=5,this.moves=0,this.moveHistory=[],this.selectedPiece=null,this.userId=null,this.currentLevel=0,this.language=navigator.language.toLowerCase().startsWith("en")?"en":"zh",this.username="anonymous",this.slideSound=new Audio("assets/slideBlock.mp3"),this.generals=["张飞","马超","赵云","黄忠"],this.generalIndex=0,this.horizontalGenerals=["关羽","周仓","魏延","庞德"],this.horizontalIndex=0,this.levels=[],this.selectedTool="CAO_CAO",this.editorMode=!1,this.editorLayout=[],this.BLOCKS={CAO_CAO:{width:2,height:2,char:"曹操",class:"cao"},VERTICAL:{width:1,height:2,char:"将军"},HORIZONTAL:{width:2,height:1,char:"将军"},SINGLE:{width:1,height:1,char:"兵"}},this.slideSound.volume=.2,this.currentLevel=e,this.bestScore="-",this.levels=v(),this.blocks=JSON.parse(JSON.stringify(this.levels[e].layout)),this.language=navigator.language.toLowerCase().startsWith("en")?"en":"zh",console.log("[DEBUG] Selected language:",this.language),console.log("[DEBUG] Available translations:",Object.keys(u)),console.log("[DEBUG] Current translations:",u[this.language]),this.blocks.forEach(t=>{t.type==="VERTICAL"?t.char=this.getNextGeneral():t.type==="HORIZONTAL"&&(t.char=this.getNextHorizontalGeneral())}),this.initializeGame(),this.initializeLevelSelector(),this.initializeLanguageSelector(),this.initializeHintSystem(),this.setupMessageHandlers(),this.initializeLevelEditor()}getNextGeneral(){const e=this.generals[this.generalIndex];return this.generalIndex=(this.generalIndex+1)%this.generals.length,e}getNextHorizontalGeneral(){const e=this.horizontalGenerals[this.horizontalIndex];return this.horizontalIndex=(this.horizontalIndex+1)%this.horizontalGenerals.length,e}setupMessageHandlers(){window.addEventListener("message",async e=>{const t=e.data;if(t.type==="initialData"&&(this.username=t.data.username,this.requestBestScore(),this.requestLeaderboard(this.currentLevel)),t.type==="bestScoreResponse"){const s=t.data.score;s!==null&&(this.bestScore=s,this.updateStats())}if(t.type==="leaderboardResponse"&&(console.log("[DEBUG] Received leaderboard response:",t.data),Array.isArray(t.data.entries)?(console.log(`[DEBUG] Entries count: ${t.data.entries.length}`),this.updateLeaderboard(t.data.entries)):console.log("[DEBUG] Error: leaderboard entries is not an array or is missing")),t.type==="changeLevel"){const s=t.data.level;this.changeLevel(s)}})}requestBestScore(){window.parent.postMessage({type:"getBestScore",data:{username:this.username,level:this.currentLevel}},"*")}requestLeaderboard(e){window.parent.postMessage({type:"getLeaderboard",data:{level:e}},"*")}updateLeaderboard(e){const t=document.getElementById("leaderboardList");if(!t)return;if(t.innerHTML="",e.length===0){const i=document.createElement("div");i.className="leaderboard-empty",i.textContent=u[this.language].noScores||"No scores recorded yet!",t.appendChild(i);return}e.forEach((i,n)=>{const r=document.createElement("div");r.className="leaderboard-entry",i.username===this.username&&r.classList.add("current-user");let a="";const l=i.rank||n+1;l===1?a="🥇 ":l===2?a="🥈 ":l===3&&(a="🥉 "),r.innerHTML=`
        <span class="rank">#${l}</span>
        <span class="username">${a}${i.username}</span>
        <span class="score">${i.score} ${u[this.language].moves||"moves"}</span>
      `,t.appendChild(r)});const s=document.createElement("button");s.className="view-leaderboard-button",s.textContent=u[this.language].viewFullLeaderboard||"View Full Leaderboard",s.addEventListener("click",()=>{window.parent.postMessage({type:"openLeaderboard"},"*")});const o=document.createElement("div");o.className="leaderboard-button-container",o.appendChild(s),t.appendChild(o)}showVictoryAnimation(){const e=document.getElementById("board");if(!e)return;const t=document.createElement("div");t.className="victory-overlay",t.innerHTML=`
      <div class="victory-content">
        <div class="victory-title">🎉 Level Complete! 🎉</div>
        <div class="victory-stats">
          <div>Moves: ${this.moves}</div>
          <div>Best Score: ${this.bestScore}</div>
        </div>
        <button class="victory-button">Continue</button>
      </div>
    `;const s=document.createElement("style");s.textContent=`
      .victory-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.8);
        display: flex;
        justify-content: center;
        align-items: center;
        animation: fadeIn 0.5s ease-in-out;
      }
      .victory-content {
        background: var(--cao-color);
        padding: 2rem;
        border-radius: 1rem;
        text-align: center;
        animation: slideIn 0.5s ease-in-out;
      }
      .victory-title {
        font-size: 2rem;
        color: white;
        margin-bottom: 1rem;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
      }
      .victory-stats {
        color: white;
        font-size: 1.2rem;
        margin-bottom: 1.5rem;
      }
      .victory-button {
        background: white;
        color: var(--cao-color);
        border: none;
        padding: 0.8rem 1.5rem;
        border-radius: 0.5rem;
        font-size: 1.1rem;
        cursor: pointer;
        transition: transform 0.2s;
      }
      .victory-button:hover {
        transform: scale(1.05);
      }
      @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
      }
      @keyframes slideIn {
        from { transform: translateY(-20px); opacity: 0; }
        to { transform: translateY(0); opacity: 1; }
      }
    `,document.head.appendChild(s),e.appendChild(t);const o=t.querySelector(".victory-button");o==null||o.addEventListener("click",()=>{t.remove(),this.resetGame()})}async checkWin(e){e.type==="CAO_CAO"&&e.y===this.BOARD_HEIGHT-2&&(console.log("[DEBUG] Win condition met!"),setTimeout(async()=>{if(this.showVictoryAnimation(),this.username){const s=await this.getBestScore();console.log(`[DEBUG] ${this.username} Current best score: ${s}, new score: ${this.moves}`),!s||this.moves<s?(console.log(`[DEBUG] Updating best score to ${this.moves}`),await this.updateBestScore(this.moves)):console.log(`[DEBUG] Not updating best score as current (${this.moves}) is not better than ${s}`)}else console.log("[DEBUG] No username available, skipping score update");alert(`Congratulations! You won in ${this.moves} moves!`),this.resetGame()},100))}async getBestScore(){return new Promise(e=>{window.parent.postMessage({type:"getBestScore",data:{username:this.username,level:this.currentLevel}},"*");const t=s=>{s.data.type==="bestScoreResponse"&&(window.removeEventListener("message",t),e(s.data.data.score))};window.addEventListener("message",t)})}async updateBestScore(e){console.log(`[DEBUG] Updating best score and leaderboard: ${e}`),window.parent.postMessage({type:"updateScore",data:{username:this.username,level:this.currentLevel,score:e}},"*");const t=s=>{var o;((o=s.data)==null?void 0:o.type)==="updateScoreAck"&&(console.log("[DEBUG] Received acknowledgment for score update"),window.removeEventListener("message",t))};window.addEventListener("message",t),this.requestLeaderboard(this.currentLevel)}initializeHintSystem(){const e=document.getElementById("levelDescription");e.innerHTML=`<p>${this.levels[this.currentLevel].description}</p>`}async promptForUserId(){const e=prompt("Congratulations, you won! Enter your user ID to save your score:");if(e){this.userId=e;const t=localStorage.getItem(`bestScore_${e}`);t&&(this.bestScore=parseInt(t),this.updateStats())}return e}initializeGame(){const e=document.getElementById("board");if(!e)return;e.innerHTML="",this.createBoard(),this.renderPieces(),this.updateStats(),this.updateUIText();const t=document.getElementById("resetBtn");t==null||t.addEventListener("click",()=>this.resetGame());const s=document.getElementById("undoBtn");if(s==null||s.addEventListener("click",()=>this.undoMove()),this.isDevelopment()){const o=document.createElement("div");o.style.padding="10px",o.style.marginTop="10px",o.style.border="1px dashed #999";const i=document.createElement("button");i.textContent="Test Redis Connection",i.style.backgroundColor="#ff5722",i.style.color="white",i.style.padding="5px 10px",i.style.border="none",i.style.borderRadius="4px",i.onclick=()=>this.testRedisConnection(),o.appendChild(i);const n=document.createElement("div");n.id="redisTestResults",n.style.marginTop="5px",n.style.fontSize="12px",o.appendChild(n);const r=document.querySelector(".game-container");r==null||r.appendChild(o)}}initializeLevelSelector(){const e=document.getElementById("levelSelector");e&&(e.value=this.currentLevel.toString(),e.addEventListener("change",t=>{const s=parseInt(t.target.value);this.changeLevel(s)}))}initializeLanguageSelector(){const e=document.getElementById("languageSelector");e.value=this.language,console.log("[DEBUG] Current translations:",u[this.language]),e.addEventListener("change",t=>{this.language=t.target.value,this.updateUIText()})}updateUIText(){var p;const e=u[this.language];console.log("[DEBUG] Updating UI text with language:",this.language),console.log("[DEBUG] Translations object:",e);const t=document.querySelector("h1");t&&(t.textContent=e.title);const s=document.getElementById("resetBtn");s&&(s.textContent=e.reset);const o=document.getElementById("undoBtn");o&&(o.textContent=e.undo);const i=document.querySelector(".tooltip-header");i&&(i.textContent=e.title);const n=document.querySelector(".tooltip-content > p");n&&(n.textContent=e.gameIntro);const r=document.getElementById("levelDescription");if(r){const d=(p=e.levels)==null?void 0:p[this.currentLevel],c=this.levels[this.currentLevel];console.log("[DEBUG] Current level info from translations:",d),console.log("[DEBUG] Current level from game:",c),d?r.innerHTML=`
          <h3>${d.name}</h3>
          <p>${d.description}</p>
        `:c&&(r.innerHTML=`
          <h3>${c.name}</h3>
          <p>${c.description}</p>
        `)}const a=document.getElementById("levelSelector");e.levels.forEach((d,c)=>{a.options[c].text=`${e.level} ${c+1}: ${d.name}`});const l=document.querySelector(".stats");l&&(l.innerHTML=`${e.moves}: <span id="moveCount">${this.moves}</span> | ${e.best}: <span id="bestScore">${this.bestScore}</span>`)}changeLevel(e){if(!(e<0||e>=this.levels.length)){if(this.currentLevel=e,this.blocks=JSON.parse(JSON.stringify(this.levels[e].layout)),this.generalIndex=0,this.horizontalIndex=0,this.blocks.forEach(t=>{t.type==="VERTICAL"?t.char=this.getNextGeneral():t.type==="HORIZONTAL"&&(t.char=this.getNextHorizontalGeneral())}),this.moves=0,this.moveHistory=[],this.selectedPiece=null,!this.userId)this.bestScore="-";else{const t=localStorage.getItem(`bestScore_${this.userId}_level${e}`);this.bestScore=t?parseInt(t):"-"}this.updateStats(),this.renderPieces(),this.updateUIText(),this.requestLeaderboard(e)}}createBoard(){const e=document.getElementById("board");e&&(e.style.gridTemplateColumns=`repeat(${this.BOARD_WIDTH}, var(--cell-size))`,e.style.gridTemplateRows=`repeat(${this.BOARD_HEIGHT}, var(--cell-size))`)}renderPieces(){const e=document.getElementById("board");e&&(e.innerHTML="",this.blocks.forEach((t,s)=>{const o={...this.BLOCKS[t.type]},i=document.createElement("div");i.className=`piece ${o.class||""}`,i.textContent=t.char||o.char,i.style.gridColumn=`${t.x+1} / span ${o.width}`,i.style.gridRow=`${t.y+1} / span ${o.height}`,i.dataset.index=s.toString(),i.addEventListener("click",()=>this.handlePieceClick(s)),e.appendChild(i)}))}handlePieceClick(e){document.querySelectorAll(".direction-arrow").forEach(o=>o.remove());const t=this.blocks[e],s=this.getPossibleMoves(t);s.length!==0&&(s.length===1?this.moveToPosition(e,s[0]):this.showMoveOptions(e,s))}showMoveOptions(e,t){const s=this.blocks[e],o=document.querySelector(`[data-index="${e}"]`),i=document.getElementById("board");if(!o||!i)return;const n=o.getBoundingClientRect(),r=i.getBoundingClientRect();document.querySelectorAll(".direction-arrow").forEach(a=>a.remove()),t.forEach(a=>{const l=document.createElement("div");l.className="direction-arrow";const p=this.getDirectionText(s,a),d=this.getDirectionSVG(p),c=n.width,f=n.height,y=34;let m,g;switch(p){case"Left":m=n.left-r.left-y,g=n.top-r.top+f/2-y/2-3;break;case"Right":m=n.right-r.left-7,g=n.top-r.top+f/2-y/2-3;break;case"Up":m=n.left-r.left+c/2-y/2-3,g=n.top-r.top-y;break;case"Down":m=n.left-r.left+c/2-20,g=n.bottom-r.top-7;break}l.style.left=`${m}px`,l.style.top=`${g}px`,l.innerHTML=d,l.onclick=()=>{this.moveToPosition(e,a),document.querySelectorAll(".direction-arrow").forEach(E=>E.remove())},i.appendChild(l)})}getDirectionText(e,t){return t.x<e.x?"Left":t.x>e.x?"Right":t.y<e.y?"Up":"Down"}getDirectionSVG(e){return{Right:'<svg width="64px" height="64px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M21 12C21 12.2652 20.8946 12.5196 20.7071 12.7071L13.7071 19.7071C13.3166 20.0976 12.6834 20.0976 12.2929 19.7071C11.9024 19.3166 11.9024 18.6834 12.2929 18.2929L17.5858 13H4C3.44772 13 3 12.5523 3 12C3 11.4477 3.44772 11 4 11H17.5858L12.2929 5.70711C11.9024 5.31658 11.9024 4.68342 12.2929 4.29289C12.6834 3.90237 13.3166 3.90237 13.7071 4.29289L20.7071 11.2929C20.8946 11.4804 21 11.7348 21 12Z" fill="#000000"></path></svg>',Left:'<svg width="64px" height="64px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M3 12C3 11.7348 3.10536 11.4804 3.29289 11.2929L10.2929 4.29289C10.6834 3.90237 11.3166 3.90237 11.7071 4.29289C12.0976 4.68342 12.0976 5.31658 11.7071 5.70711L6.41421 11H20C20.5523 11 21 11.4477 21 12C21 12.5523 20.5523 13 20 13H6.41421L11.7071 18.2929C12.0976 18.6834 12.0976 19.3166 11.7071 19.7071C11.3166 20.0976 10.6834 20.0976 10.2929 19.7071L3.29289 12.7071C3.10536 12.5196 3 12.2652 3 12Z" fill="#000000"></path></svg>',Up:'<svg width="64px" height="64px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M12 3C12.2652 3 12.5196 3.10536 12.7071 3.29289L19.7071 10.2929C20.0976 10.6834 20.0976 11.3166 19.7071 11.7071C19.3166 12.0976 18.6834 12.0976 18.2929 11.7071L13 6.41421V20C13 20.5523 12.5523 21 12 21C11.4477 21 11 20.5523 11 20V6.41421L5.70711 11.7071C5.31658 12.0976 4.68342 12.0976 4.29289 11.7071C3.90237 11.3166 3.90237 10.6834 4.29289 10.2929L11.2929 3.29289C11.4804 3.10536 11.7348 3 12 3Z" fill="#000000"></path></svg>',Down:'<svg width="64px" height="64px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M12 21C11.7348 21 11.4804 20.8946 11.2929 20.7071L4.29289 13.7071C3.90237 13.3166 3.90237 12.6834 4.29289 12.2929C4.68342 11.9024 5.31658 11.9024 5.70711 12.2929L11 17.5858V4C11 3.44772 11.4477 3 12 3C12.5523 3 13 3.44772 13 4V17.5858L18.2929 12.2929C18.6834 11.9024 19.3166 11.9024 19.7071 12.2929C20.0976 12.6834 20.0976 13.3166 19.7071 13.7071L12.7071 20.7071C12.5196 20.8946 12.2652 21 12 21Z" fill="#000000"></path></svg>'}[e]}moveToPosition(e,t){this.moveHistory.push(JSON.stringify(this.blocks));const s=this.blocks[e];s.x=t.x,s.y=t.y,this.moves++,this.slideSound.play(),this.updateStats(),this.renderPieces(),this.checkWin(s)}updatePieceSelection(){if(document.querySelectorAll(".piece").forEach(e=>{e.style.filter="none"}),this.selectedPiece!==null){const e=document.querySelector(`[data-index="${this.selectedPiece}"]`);e&&(e.style.filter="brightness(1.2)")}}isAdjacent(e,t){const s=this.BLOCKS[e.type],o=this.BLOCKS[t.type],i=e.x+s.width,n=e.y+s.height,r=t.x+o.width,a=t.y+o.height;return Math.abs(i-t.x)===0&&this.hasVerticalOverlap(e,t)||Math.abs(e.x-r)===0&&this.hasVerticalOverlap(e,t)||Math.abs(n-t.y)===0&&this.hasHorizontalOverlap(e,t)||Math.abs(e.y-a)===0&&this.hasHorizontalOverlap(e,t)}hasVerticalOverlap(e,t){const s=this.BLOCKS[e.type],o=this.BLOCKS[t.type];return!(e.y>=t.y+o.height||t.y>=e.y+s.height)}hasHorizontalOverlap(e,t){const s=this.BLOCKS[e.type],o=this.BLOCKS[t.type];return!(e.x>=t.x+o.width||t.x>=e.x+s.width)}getPossibleMoves(e){const t=[];return[[-1,0],[1,0],[0,-1],[0,1]].forEach(([s,o])=>{const i=e.x+s,n=e.y+o;this.isValidMove(e,i,n)&&t.push({x:i,y:n})}),t}isValidMove(e,t,s){const o=this.BLOCKS[e.type];return t<0||s<0||t+o.width>this.BOARD_WIDTH||s+o.height>this.BOARD_HEIGHT?!1:!this.blocks.some(i=>{if(e===i)return!1;const n=this.BLOCKS[i.type];return this.rectsIntersect({x:t,y:s,w:o.width,h:o.height},{x:i.x,y:i.y,w:n.width,h:n.height})})}rectsIntersect(e,t){return!(t.x>=e.x+e.w||t.x+t.w<=e.x||t.y>=e.y+e.h||t.y+t.h<=e.y)}undoMove(){if(this.moveHistory.length>0){const e=this.moveHistory.pop();e&&(this.blocks=JSON.parse(e)),this.moves--,this.updateStats(),this.renderPieces()}}resetGame(){document.querySelectorAll(".direction-arrow").forEach(e=>e.remove()),this.generalIndex=0,this.horizontalIndex=0,this.blocks=JSON.parse(JSON.stringify(this.levels[this.currentLevel].layout)),this.blocks.forEach(e=>{e.type==="VERTICAL"?e.char=this.getNextGeneral():e.type==="HORIZONTAL"&&(e.char=this.getNextHorizontalGeneral())}),this.moves=0,this.moveHistory=[],this.selectedPiece=null,this.userId||(this.bestScore="-"),this.updateStats(),this.renderPieces(),this.updateUIText()}updateStats(){const e=document.getElementById("moveCount"),t=document.getElementById("bestScore");e&&(e.textContent=this.moves.toString()),t&&(t.textContent=this.bestScore.toString())}isDevelopment(){return window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1"||window.location.search.includes("debug=true")}testRedisConnection(){console.log("[DEBUG] Testing Redis connection...");const e=document.getElementById("redisTestResults");e&&(e.textContent="Testing Redis connection...",e.style.color="#666"),window.parent.postMessage({type:"testRedis"},"*");const t=s=>{if(s.data.type==="testRedisResponse"){window.removeEventListener("message",t);const{success:o,message:i}=s.data.data;console.log(`[DEBUG] Redis test result: ${o?"Success":"Failed"} - ${i}`),e&&(e.textContent=i,e.style.color=o?"green":"red")}};window.addEventListener("message",t)}createNewLevel(e,t,s,o=3){const i={name:e,description:t,layout:s,difficulty:o,creator:this.username,isUserCreated:!0,dateCreated:new Date().toISOString()};x(i),this.levels=v(),this.initializeLevelSelector()}deleteUserLevel(e){var t;I(e),this.levels=v(),this.initializeLevelSelector(),((t=this.levels[this.currentLevel])==null?void 0:t.name)===e&&this.changeLevel(0)}initializeLevelEditor(){const e=document.getElementById("editorBtn"),t=document.getElementById("editorModal"),s=document.getElementById("closeEditor"),o=document.getElementById("saveLevel"),i=document.getElementById("testLevel");document.getElementById("editorBoard"),e&&t&&e.addEventListener("click",()=>{this.editorMode=!0,this.editorLayout=[],this.initializeEditorBoard(),t.classList.remove("hidden")}),s&&t&&s.addEventListener("click",()=>{t.classList.add("hidden"),this.editorMode=!1}),document.querySelectorAll(".tool-btn").forEach(n=>{n.addEventListener("click",()=>{this.selectedTool=n.dataset.tool||"CAO_CAO",document.querySelectorAll(".tool-btn").forEach(r=>r.classList.remove("active")),n.classList.add("active")})}),o&&o.addEventListener("click",()=>{const n=document.getElementById("levelName").value,r=document.getElementById("levelDesc").value,a=parseInt(document.getElementById("levelDifficulty").value);if(!n||!r){alert("Please fill in all fields");return}this.createNewLevel(n,r,this.editorLayout,a),t==null||t.classList.add("hidden"),this.editorMode=!1}),i&&i.addEventListener("click",()=>{const n=document.getElementById("levelName").value||"Test Level",r=document.getElementById("levelDesc").value||"Test level",a={name:n,description:r,layout:this.editorLayout,difficulty:3};this.editorMode=!1,this.levels=[a],this.changeLevel(0),t==null||t.classList.add("hidden")})}initializeEditorBoard(){const e=document.getElementById("editorBoard");if(e){e.innerHTML="";for(let t=0;t<5;t++)for(let s=0;s<4;s++){const o=document.createElement("div");o.className="cell",o.dataset.x=s.toString(),o.dataset.y=t.toString(),o.addEventListener("click",()=>this.handleEditorCellClick(s,t)),e.appendChild(o)}}}handleEditorCellClick(e,t){if(this.editorMode){if(this.editorLayout=this.editorLayout.filter(s=>!(s.x===e&&s.y===t)),this.selectedTool!=="ERASE"){const s={type:this.selectedTool,x:e,y:t};this.editorLayout.push(s)}this.updateEditorBoard()}}updateEditorBoard(){document.querySelectorAll(".editor-board .cell").forEach(t=>{const s=parseInt(t.getAttribute("data-x")||"0"),o=parseInt(t.getAttribute("data-y")||"0"),i=this.editorLayout.find(n=>n.x===s&&n.y===o);i?t.style.backgroundColor=this.getBlockColor(i.type):t.style.backgroundColor="var(--piece-color)"})}getBlockColor(e){switch(e){case"CAO_CAO":return"var(--cao-color)";case"VERTICAL":return"var(--vertical-color)";case"HORIZONTAL":return"var(--horizontal-color)";case"SINGLE":return"var(--single-color)";default:return"var(--piece-color)"}}}window.HuarongGame=S;
